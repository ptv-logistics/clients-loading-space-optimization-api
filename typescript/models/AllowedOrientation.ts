/* tslint:disable */
/* eslint-disable */
/**
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const AllowedOrientation = {
    ORIGINAL: 'ORIGINAL',
    X: 'X',
    Y: 'Y',
    Z: 'Z',
    XZ: 'XZ',
    YZ: 'YZ'
} as const;
export type AllowedOrientation = typeof AllowedOrientation[keyof typeof AllowedOrientation];


export function instanceOfAllowedOrientation(value: any): boolean {
    for (const key in AllowedOrientation) {
        if (Object.prototype.hasOwnProperty.call(AllowedOrientation, key)) {
            if (AllowedOrientation[key as keyof typeof AllowedOrientation] === value) {
                return true;
            }
        }
    }
    return false;
}

export function AllowedOrientationFromJSON(json: any): AllowedOrientation {
    return AllowedOrientationFromJSONTyped(json, false);
}

export function AllowedOrientationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllowedOrientation {
    return json as AllowedOrientation;
}

export function AllowedOrientationToJSON(value?: AllowedOrientation | null): any {
    return value as any;
}

