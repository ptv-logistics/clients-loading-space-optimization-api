/*
 * Loading Optimization
 *
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PTV.Developer.Clients.binpacking.Client.OpenAPIDateConverter;

namespace PTV.Developer.Clients.binpacking.Model
{
    /// <summary>
    /// Defines the stacking restrictions: * &#x60;ALL_ALLOWED&#x60; - All items can be stacked on top of this item. * &#x60;ALL_PROHIBITED&#x60; - No further item may be stacked on top of this item. * &#x60;ALLOWED&#x60; - Every listed items can be stacked on top of this item. * &#x60;PROHIBITED&#x60; - None of the listed items may be stacked on top of this item.
    /// </summary>
    /// <value>Defines the stacking restrictions: * &#x60;ALL_ALLOWED&#x60; - All items can be stacked on top of this item. * &#x60;ALL_PROHIBITED&#x60; - No further item may be stacked on top of this item. * &#x60;ALLOWED&#x60; - Every listed items can be stacked on top of this item. * &#x60;PROHIBITED&#x60; - None of the listed items may be stacked on top of this item.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StackingRestrictionType
    {
        /// <summary>
        /// Enum ALL_ALLOWED for value: ALL_ALLOWED
        /// </summary>
        [EnumMember(Value = "ALL_ALLOWED")]
        ALL_ALLOWED = 1,

        /// <summary>
        /// Enum ALL_PROHIBITED for value: ALL_PROHIBITED
        /// </summary>
        [EnumMember(Value = "ALL_PROHIBITED")]
        ALL_PROHIBITED = 2,

        /// <summary>
        /// Enum ALLOWED for value: ALLOWED
        /// </summary>
        [EnumMember(Value = "ALLOWED")]
        ALLOWED = 3,

        /// <summary>
        /// Enum PROHIBITED for value: PROHIBITED
        /// </summary>
        [EnumMember(Value = "PROHIBITED")]
        PROHIBITED = 4
    }

}
