/*
 * Loading Optimization
 * With the Bin Packing service you can pack a number of items of various types into a number of bins of various types.
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.binpacking.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Describes the orientation that was used to place the item into the bin. * &#x60;ORIGINAL&#x60; - Item was not re-oriented. Dimensions stay (x,y,z). * &#x60;X&#x60; - Item was rotated around x-axis (widthwise) by +/-90 degrees compared to the original orientation. Dimensions are (x,z,y). * &#x60;Y&#x60; - Item was rotated around y-axis (heightwise) by +/-90 degrees compared to the original orientation. Dimensions are (z,y,x). * &#x60;Z&#x60; - Item was rotated around z-axis (lengthwise) by +/-90 degrees compared to the original orientation. Dimensions are (y,x,z). * &#x60;XZ&#x60; - Item was rotated around x- then z-axis (width- then heightwise) by +/-90 degrees compared to the original orientation. Dimensions are (z,x,y). * &#x60;YZ&#x60; - Item was rotated around x- then z-axis (width- then heightwise) by +/-90 degrees compared to the original orientation. Dimensions are (z,x,y).
 */
public enum ItemOrientation {
  
  ORIGINAL("ORIGINAL"),
  
  X("X"),
  
  Y("Y"),
  
  Z("Z"),
  
  XZ("XZ"),
  
  YZ("YZ");

  private String value;

  ItemOrientation(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ItemOrientation fromValue(String value) {
    for (ItemOrientation b : ItemOrientation.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

